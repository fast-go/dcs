// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package productclient

import (
	"context"

	"dcs/rpc/product/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DetailReq     = product.DetailReq
	ProductDetail = product.ProductDetail

	Product interface {
		GetProduct(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*ProductDetail, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) GetProduct(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*ProductDetail, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.GetProduct(ctx, in, opts...)
}
